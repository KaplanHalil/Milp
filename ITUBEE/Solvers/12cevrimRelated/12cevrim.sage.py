

# This file was *autogenerated* from the file 12cevrim.sage
from sage.all_cmdline import *   # import sage library

_sage_const_0 = Integer(0); _sage_const_1 = Integer(1); _sage_const_2 = Integer(2); _sage_const_3 = Integer(3); _sage_const_4 = Integer(4); _sage_const_5 = Integer(5); _sage_const_6 = Integer(6); _sage_const_7 = Integer(7); _sage_const_8 = Integer(8); _sage_const_9 = Integer(9); _sage_const_10 = Integer(10); _sage_const_15 = Integer(15); _sage_const_20 = Integer(20); _sage_const_30 = Integer(30); _sage_const_40 = Integer(40); _sage_const_50 = Integer(50); _sage_const_60 = Integer(60); _sage_const_70 = Integer(70); _sage_const_80 = Integer(80); _sage_const_90 = Integer(90); _sage_const_100 = Integer(100); _sage_const_110 = Integer(110); _sage_const_120 = Integer(120); _sage_const_130 = Integer(130)
import time

a= time.time()
p = MixedIntegerLinearProgram (maximization=False, solver = "GLPK", names=('KL', 'KR', 'R0', 'R1', 'R2', 'R3', 'R3a', 'R3b', 'R3c', 'R3d', 'R4', 'R4a', 'R4b', 'R4c', 'R4d', 'R5', 'R5a', 'R5b', 'R5c', 'R5d', 'R6', 'R6a', 'R6b', 'R6c', 'R6d', 'R7', 'R7a', 'R7b', 'R7c', 'R7d', 'R8', 'R8a', 'R8b', 'R8c', 'R8d', 'R9', 'R9a', 'R9b', 'R9c', 'R9d', 'R10', 'R10a', 'R10b', 'R10c', 'R10d', 'R11', 'R11a', 'R11b', 'R11c', 'R11d', 'R12', 'R12a', 'R12b', 'R12c', 'R12d', 'R13', 'R13a', 'R13b', 'R13c', 'R13d', 'R14', 'R14a', 'R14b', 'R14c', 'R14d', 'R15', 'd',)); (KL, KR, R0, R1, R2, R3, R3a, R3b, R3c, R3d, R4, R4a, R4b, R4c, R4d, R5, R5a, R5b, R5c, R5d, R6, R6a, R6b, R6c, R6d, R7, R7a, R7b, R7c, R7d, R8, R8a, R8b, R8c, R8d, R9, R9a, R9b, R9c, R9d, R10, R10a, R10b, R10c, R10d, R11, R11a, R11b, R11c, R11d, R12, R12a, R12b, R12c, R12d, R13, R13a, R13b, R13c, R13d, R14, R14a, R14b, R14c, R14d, R15, d,) = p._first_ngens(67)
# Her bir Ã§evrimdeki aktiflik
p.set_binary (KL)
p.set_binary (KR)
p.set_binary (R0)
p.set_binary (R1)
p.set_binary (R2)
p.set_binary (R3)
p.set_binary (R3a)
p.set_binary (R3b)
p.set_binary (R3c)
p.set_binary (R3d)

p.set_binary (R4)
p.set_binary (R4a)
p.set_binary (R4b)
p.set_binary (R4c)
p.set_binary (R4d)

p.set_binary (R5)
p.set_binary (R5a)
p.set_binary (R5b)
p.set_binary (R5c)
p.set_binary (R5d)

p.set_binary (R6)
p.set_binary (R6a)
p.set_binary (R6b)
p.set_binary (R6c)
p.set_binary (R6d)

p.set_binary (R7)
p.set_binary (R7a)
p.set_binary (R7b)
p.set_binary (R7c)
p.set_binary (R7d)

p.set_binary (R8)
p.set_binary (R8a)
p.set_binary (R8b)
p.set_binary (R8c)
p.set_binary (R8d)

p.set_binary (R9)
p.set_binary (R9a)
p.set_binary (R9b)
p.set_binary (R9c)
p.set_binary (R9d)


p.set_binary (R10)
p.set_binary (R10a)
p.set_binary (R10b)
p.set_binary (R10c)
p.set_binary (R10d)

p.set_binary (R11)
p.set_binary (R11a)
p.set_binary (R11b)
p.set_binary (R11c)
p.set_binary (R11d)

p.set_binary (R12)
p.set_binary (R12a)
p.set_binary (R12b)
p.set_binary (R12c)
p.set_binary (R12d)

p.set_binary (R13)
p.set_binary (R13a)
p.set_binary (R13b)
p.set_binary (R13c)
p.set_binary (R13d)

p.set_binary (R14)
p.set_binary (R14a)
p.set_binary (R14b)
p.set_binary (R14c)
p.set_binary (R14d)

p.set_binary (R15)
p.set_binary (d)
pp = Polyhedron(vertices=[

[ _sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0  ],
[ _sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1 ,_sage_const_0 ,_sage_const_0 ,_sage_const_1 ,_sage_const_1 ,_sage_const_1  ],

], base_ring=QQ)

hed= pp.Hrepresentation()


def poly_map(p,var1list,var2list):
    for h in hed:
        u= list(h)
        p.add_constraint(
        u[_sage_const_1 ]*var1list[_sage_const_0 ] +
        u[_sage_const_2 ]*var1list[_sage_const_1 ] +
        u[_sage_const_3 ]*var1list[_sage_const_2 ] +
        u[_sage_const_4 ]*var1list[_sage_const_3 ] +
        u[_sage_const_5 ]*var1list[_sage_const_4 ] +
        u[_sage_const_6 ]*var2list[_sage_const_0 ] +
        u[_sage_const_7 ]*var2list[_sage_const_1 ] +
        u[_sage_const_8 ]*var2list[_sage_const_2 ] +
        u[_sage_const_9 ]*var2list[_sage_const_3 ] +
        u[_sage_const_10 ]*var2list[_sage_const_4 ] +
        u[_sage_const_0 ] >= _sage_const_0  )
    
def xor(p,in1,in2,out,dummy):
    for i in range(len(in1)):
        p.add_constraint(in1[i]+in2[i]+out[i]-_sage_const_2 *dummy[i] >=_sage_const_0 )
        p.add_constraint(dummy[i]- in1[i] >= _sage_const_0 )
        p.add_constraint(dummy[i]- in2[i] >= _sage_const_0 )
        p.add_constraint(dummy[i]- out[i] >= _sage_const_0 )



# anahtar non-zero sarti
p.add_constraint (p.sum (KL[i] for i in range (_sage_const_5 )) + p.sum (KR[i] for i in range (_sage_const_5 ))  >= _sage_const_1 )

def ilk_cevrim(p,d, KR, KL, R0, R1, R2, R3, R3a, R3b, R3c, R3d, R4):
    xor(p, [R0[i] for i in range(_sage_const_5 )] , [KR[i] for i in range(_sage_const_5 )], [R2[i] for i in range(_sage_const_5 )], [d[i] for i in range(_sage_const_5 )])

    xor(p, [R1[i] for i in range(_sage_const_5 )] , [KL[i] for i in range(_sage_const_5 )], [R3[i] for i in range(_sage_const_5 )], [d[i+_sage_const_5 ] for i in range(_sage_const_5 )])

    poly_map(p, [R3[i] for i in range(_sage_const_5 )] , [R3a[i] for i in range(_sage_const_5 )])

    xor(p, [R3a[i] for i in range(_sage_const_5 )] , [KR[i] for i in range(_sage_const_5 )], [R3b[i] for i in range(_sage_const_5 )], [d[i+_sage_const_10 ] for i in range(_sage_const_5 )])

    poly_map(p, [R3b[i] for i in range(_sage_const_5 )] , [R3c[i] for i in range(_sage_const_5 )])

    poly_map(p, [R3c[i] for i in range(_sage_const_5 )] , [R3d[i] for i in range(_sage_const_5 )])

    xor(p, [R3d[i] for i in range(_sage_const_5 )] , [R2[i] for i in range(_sage_const_5 )], [R4[i] for i in range(_sage_const_5 )], [d[i+_sage_const_15 ] for i in range(_sage_const_5 )])
    
def cevrim(p,d,K,R0,R1,R1a,R1b,R1c,R1d,R2):
    
    poly_map(p, [R1[i] for i in range(_sage_const_5 )] , [R1a[i] for i in range(_sage_const_5 )])

    xor(p, [R1a[i] for i in range(_sage_const_5 )] , [K[i] for i in range(_sage_const_5 )], [R1b[i] for i in range(_sage_const_5 )], [d[i] for i in range(_sage_const_5 )])

    poly_map(p, [R1b[i] for i in range(_sage_const_5 )] , [R1c[i] for i in range(_sage_const_5 )])

    poly_map(p, [R1c[i] for i in range(_sage_const_5 )] , [R1d[i] for i in range(_sage_const_5 )])

    xor(p, [R1d[i] for i in range(_sage_const_5 )] , [R0[i] for i in range(_sage_const_5 )], [R2[i] for i in range(_sage_const_5 )], [d[i+_sage_const_5 ] for i in range(_sage_const_5 )])
    
# Round 

ilk_cevrim(p,[d[i] for i in range(_sage_const_0 ,_sage_const_20 )], KR, KL, R0, R1, R2, R3, R3a, R3b, R3c, R3d, R4)
cevrim(p,[d[i] for i in range(_sage_const_20 ,_sage_const_30 )],KL,R3,R4,R4a,R4b,R4c,R4d,R5)
cevrim(p,[d[i] for i in range(_sage_const_30 ,_sage_const_40 )],KR,R4,R5,R5a,R5b,R5c,R5d,R6)
cevrim(p,[d[i] for i in range(_sage_const_40 ,_sage_const_50 )],KL,R5,R6,R6a,R6b,R6c,R6d,R7)
cevrim(p,[d[i] for i in range(_sage_const_50 ,_sage_const_60 )],KR,R6,R7,R7a,R7b,R7c,R7d,R8)
cevrim(p,[d[i] for i in range(_sage_const_60 ,_sage_const_70 )],KL,R7,R8,R8a,R8b,R8c,R8d,R9)
cevrim(p,[d[i] for i in range(_sage_const_70 ,_sage_const_80 )],KR,R8,R9,R9a,R9b,R9c,R9d,R10)
cevrim(p,[d[i] for i in range(_sage_const_80 ,_sage_const_90 )],KL,R9,R10,R10a,R10b,R10c,R10d,R11)
cevrim(p,[d[i] for i in range(_sage_const_90 ,_sage_const_100 )],KR,R10,R11,R11a,R11b,R11c,R11d,R12)
cevrim(p,[d[i] for i in range(_sage_const_100 ,_sage_const_110 )],KL,R11,R12,R12a,R12b,R12c,R12d,R13)
cevrim(p,[d[i] for i in range(_sage_const_110 ,_sage_const_120 )],KR,R12,R13,R13a,R13b,R13c,R13d,R14)
cevrim(p,[d[i] for i in range(_sage_const_120 ,_sage_const_130 )],KL,R13,R14,R14a,R14b,R14c,R14d,R15)

#Toplam aktif. b anahtar xor olduÄu iÃ§in yok.
ta=[]
ta.append(p.sum (R3[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R3a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R3c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R3d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R4[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R4a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R4c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R4d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R5[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R5a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R5c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R5d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R6[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R6a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R6c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R6d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R7[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R7a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R7c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R7d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R8[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R8a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R8c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R8d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R9[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R9a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R9c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R9d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R10[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R10a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R10c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R10d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R11[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R11a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R11c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R11d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R12[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R12a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R12c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R12d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R13[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R13a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R13c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R13d[i] for i in range (_sage_const_5 )))

ta.append(p.sum (R14[i] for i in range (_sage_const_5 ))) 
ta.append(p.sum (R14a[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R14c[i] for i in range (_sage_const_5 )))
ta.append(p.sum (R14d[i] for i in range (_sage_const_5 )))

p.set_objective (p.sum ([ta[i] for i in range(len(ta))]))

#p.show()

#p.write_lp("problem.lp")

#print ("Toplam aktif s-kutusu: ",p.solve())

print(p.number_of_constraints())
print(p.number_of_variables())

b=time.time()

print("\n SÃ¼re: ",(b-a))

